* {
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: sans-serif;
    background-color: #f5f6f7;
}

.header {
    text-align: center;
    text-transform: uppercase;
    padding: 32px;
    background: #0a0a23;
    color: #fff;
    border-bottom: 4px solid #fdb347;
}

/*
   Flexbox has a main and cross axis. 
   The main axis is defined by the **flex-direction** property, 
   which has four possible values:

     row (default): horizontal axis with flex items 
                    from left to right
     row-reverse: horizontal axis with flex items 
                    from right to left
     column: vertical axis with flex items 
                    from top to bottom
     column-reverse: vertical axis with flex items 
                    from bottom to top

     Note: The axes and directions will be different 
     depending on the text direction. 
     The values shown are for a left-to-right text direction.
*/

.gallery {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    padding: 20px 10px;
    max-width: 1400px;
    margin: 0 auto; /* to center the images*/
    gap: 16px;
}

/*
   Images need some space between them.

   The gap CSS shorthand property sets the gaps, 
   also known as gutters, between rows and columns. 
   The gap property and its row-gap and column-gap 
   sub-properties provide this functionality for flex, grid,
   and multi-column layout. You apply the property to 
   the container element.
*/

.gallery img {
    width: 100%;
    max-width: 350px;
    height: 300px;
    object-fit: cover;
    border-radius: 10px;
}

/*
   The ::after pseudo-element creates an element that is 
   the last child of the selected element. You can use it 
   to add an empty element after the last image.
*/

.gallery::after {
    content: "";
    width: 350px;
}